name: CI

on:
  push:
    paths-ignore:
      - '.github/**'
      - '*.md'
      - '.gitignore'
      - 'roles/backup/**'
      - 'roles/backup2/**'
      - 'roles/restore/**'
      - 'roles/settings/**'
      - 'roles/plex_extra_tasks/**'
      - 'roles/plex_auth_token/**'
      - 'roles/plex_db/**'
      - 'roles/arr_db/**'
      - 'roles/diag/**'
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    paths-ignore:
      - '.github/**'
      - '*.md'
      - '.gitignore'
      - 'roles/backup/**'
      - 'roles/backup2/**'
      - 'roles/restore/**'
      - 'roles/settings/**'
      - 'roles/plex_extra_tasks/**'
      - 'roles/plex_auth_token/**'
      - 'roles/plex_db/**'
      - 'roles/arr_db/**'
      - 'roles/diag/**'
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  ansible-lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: 'requirements/requirements-lint.txt'

      - name: Install packages
        run: pip install -r ./requirements/requirements-lint.txt

      - name: Run ansible linter
        working-directory: ${{ github.workspace }}
        run: ansible-lint

      - name: Run salty linter
        run: python3 ./scripts/salty-linter.py ./roles

  find-roles:
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: echo "matrix={\"roles\":[$(awk '/# Core/{flag=1;next}/# Apps End/{flag=0}flag' saltbox.yml | awk '!/#/' | awk -F'[][]' '{print $2}' | tr '\n' ',' | sed 's/,*$//' | awk -F',' '{ for( i=1; i<=NF; i++ ) print $i }' | awk '{ gsub(/ /,""); print }'| sort -u | awk -vORS=, '{ print $1 }' | sed 's/,$/\n/' | sed "s/.\(roles\|common\|hetzner\|kernel\|motd\|mounts\|preinstall\|rclone\|scripts\|shell\|system\|traefik\|traefik-reset-certs\|user\|cloudflare\|plex-db\|arr-db\|ddns\|cloudplow\|cloudplow-reset\|btrfsmaintenance\|download-clients\|download-indexers\|media-server\|python\|yyq\).,//g")]}" >> $GITHUB_OUTPUT

  install:
    name: '${{ matrix.roles }}'
    runs-on: ubuntu-22.04
    needs: [ansible-lint, find-roles]
    strategy:
      matrix: ${{ fromJson(needs.find-roles.outputs.matrix) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Create Directories
        run: sudo mkdir -p /srv/ansible /srv/git/sb

      - name: Copy requirements.txt
        run: sudo cp ./requirements/requirements-saltbox.txt /srv/git/sb/requirements-saltbox.txt

      - name: Chown /srv/git
        run: sudo chown -R runner:runner /srv/git

      - name: Tune GitHub-hosted runner network
        run: sudo ethtool -K eth0 tx off rx off

      - name: Print pip dependencies
        run: cat /srv/git/sb/requirements-saltbox.txt

      - name: Install Dependencies
        run: curl https://raw.githubusercontent.com/saltyorg/sb/master/sb_dep.sh --output sb_dep.sh && sudo bash sb_dep.sh -v && /srv/ansible/venv/bin/ansible --version

      - name: Symlink cloned repository to /srv/git/saltbox
        run: sudo ln -s $GITHUB_WORKSPACE /srv/git/saltbox

      - name: Install saltbox.fact
        run: |
          mkdir -p $GITHUB_WORKSPACE/ansible_facts.d
          curl -fsSL https://github.com/saltyorg/ansible-facts/releases/latest/download/saltbox-facts -o /srv/git/saltbox/ansible_facts.d/saltbox.fact
          chmod +x $GITHUB_WORKSPACE/ansible_facts.d/saltbox.fact

      - name: Chown /srv/git
        run: sudo chown -R runner:runner /srv/git

      - name: Import default configuration
        run: for i in defaults/*; do cp -n $i "$(basename "${i%.*}")"; done

      - name: Edit accounts.yml
        run: sed -i 's/seed/runner/g' accounts.yml

      - name: Run Tree on Saltbox repository
        run: tree -a

      - name: Syntax Check
        run: sudo /srv/ansible/venv/bin/ansible-playbook saltbox.yml --syntax-check

      - name: Create CI vars file
        run: |
          echo "continuous_integration: true" > vars.yml
          echo "dockerhub:" >> vars.yml
          echo "  token: ${{ secrets.DOCKERHUB_TOKEN }}" >> vars.yml
          echo "  user: ${{ secrets.DOCKERHUB_USERNAME }}" >> vars.yml

      - name: Install Saltbox Core
        run: sudo /srv/ansible/venv/bin/ansible-playbook saltbox.yml --tags "core" --skip-tags "settings" --extra-vars "@vars.yml"
        if: ${{ !(contains(matrix.roles, 'saltbox') || contains(matrix.roles, 'feederbox') || contains(matrix.roles, 'mediabox') || contains(matrix.roles, 'core')) }}

      - name: Install ${{ matrix.roles }}
        run: sudo /srv/ansible/venv/bin/ansible-playbook saltbox.yml --tags "${{ matrix.roles }}" --skip-tags "settings" --extra-vars "@vars.yml"

  webhook:
    name: 'webhook'
    runs-on: ubuntu-22.04
    needs: [ansible-lint, find-roles, install]
    if: always() && (github.actor == 'dependabot[bot]' || (github.event_name != 'pull_request' && github.event.repository.fork == false))
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Determine Workflow Conclusion
        run: python3 ./scripts/workflow-status.py '${{ toJSON(needs) }}'

      - uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ env.WORKFLOW_CONCLUSION }}
          description: "Run attempt: ${{ github.run_attempt }}"

  retry-on-failure:
    if: failure() && github.actor != 'dependabot[bot]' && fromJSON(github.run_attempt) < 3
    needs: [install, webhook]
    runs-on: ubuntu-latest
    steps:
      - env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
        run: gh workflow run retry.yml -F run_id=${{ github.run_id }}
